// CONFIGURE ALL SUBPROJECTS ///////////////////////////////////////////////////

subprojects {
  apply plugin: 'com.jfrog.artifactory'
  apply plugin: 'java'
  apply plugin: 'org.xtend.xtend'
  apply plugin: 'eclipse'
  apply plugin: 'maven-publish'

  sourceCompatibility=javaVersion
  targetCompatibility=javaVersion

  def exportName
  if(name == 'mod') exportName = parent.name
  else exportName = "${parent.name}-${name}"  

  eclipse.project.name = exportName

  configurations {
    all*.exclude group: 'log4j', module: 'log4j'
    provided {
      dependencies.all { dep -> configurations.default.exclude group: dep.group, module: dep.name }
    }
    compile.extendsFrom provided
    testCompile.extendsFrom provided
  }

  dependencies {
    compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtendVersion}"
    compile "org.eclipse.xtext:org.eclipse.xtext.xbase.lib:${xtendVersion}"
    provided "io.vertx:vertx-core:${vertxVersion}"
    provided "io.vertx:vertx-maven-service-factory:${vertxVersion}"
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven {
      url "${artifactory_url}/${artifactory_release_repo}"
      credentials {
        username = "${artifactory_user}"
        password = "${artifactory_password}"
      }
    }        
  }

  task install( dependsOn: publishToMavenLocal )
  task export( dependsOn: artifactoryPublish)

  task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifactoryPublish {
    dependsOn sourceJar, javadocJar
  }

  tasks.withType(Javadoc) {
    if (JavaVersion.current().isJava8Compatible()) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        pom.withXml {
          asNode().dependencies.'*'.findAll() {
            it.scope.text() == 'runtime'
          }.each() {
            it.scope*.value = 'compile'
          }
        }
        artifactId "${exportName}"
        artifact sourceJar
        artifact javadocJar
        from components.java
      }
    }
  }
}


// CONFIGURE ARTIFACTORY ///////////////////////////////////////////////////////

artifactory {
  contextUrl = "${artifactory_url}"
  publish {
    repository {
      repoKey = "${artifactory_release_repo}"
      username = "${artifactory_user}"
      password = "${artifactory_password}"
    }
    defaults {
      publications ('mavenJava')
    }
  }
}
